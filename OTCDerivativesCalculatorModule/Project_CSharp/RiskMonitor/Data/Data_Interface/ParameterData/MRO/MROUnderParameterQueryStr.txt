WITH OTC_TC_MRMONTHDIFF AS
  (SELECT ELS_CODE,
    KR_CODE,
    DUE_DATE,
    BOND_CLASS_ID ,
    ROUND(MONTHS_BETWEEN(TO_DATE(DUE_DATE,'YYYYMMDD'), TO_DATE('20131111','YYYYMMDD'))/12,4) DATE_MONTH_DIFF_RATE
  FROM OTC_TC_MRELSMASTER
  WHERE ELS_CODE='@ITEM_CODE@'
  )
SELECT A.ELS_CODE -- ELS코드
  ,
  A.STOCK_ID -- 주식코드
  ,
  NVL(S.STOCK_NAME, A.STOCK_ID) STOCK_NAME -- 주식명
  ,
  DECODE(A.BARRIER_YN,'Y','Y','N') BARRIER_YN-- Barrier대상
  ,
  A.BASE_PRICE -- 행사가(기준가격)
  ,
  S.CURR_PRICE -- 현재가
  ,
  NVL(V.DIVIDEND_RATE,S.DIVIDEND_RATE)*100 DIVIDEND_RATE -- 배당율(%,조회)
  ,
  V.VOL*100 VOL -- 변동율(%,조회)
  ,
  FN_CODE_NAME('000000','BOND_CLASS_ID',D.BOND_CLASS_ID) BOND_CLASS_NAME -- 무위험이자Curve
  ,
  D.RF -- 무위험이자율
  ,
  P.ASSET_PARITY -- Muti Asset 값(기초자산패러티)
  
FROM OTC_TC_MRELSSTOCKPRICE A
LEFT OUTER JOIN TD_MRSTOCKFACTOR S
ON S.STD_DATE ='@STD_DATE@'
AND A.STOCK_ID=S.STOCK_ID
LEFT OUTER JOIN OTC_TC_MRELSMASTER E
ON A.ELS_CODE=E.ELS_CODE
LEFT OUTER JOIN
  /*20090314시작 inner join으로 변경*/
  (SELECT A.STD_DATE,
    A.STOCK_ID,
    A.VOL,
    A.QUANTO_VOL,
    A.QUANTO_RHO,
    A.DIVIDEND_RATE
  FROM OTC_TD_MRSTOCKFACTORVOL A
  INNER JOIN OTC_TC_MRELSSTOCKPRICE B
  ON A.STOCK_ID    =B.STOCK_ID
  AND B.ELS_CODE   = '@ITEM_CODE@'
  WHERE A.KR_CODE  = '@ITEM_CODE@'
  AND A.STD_DATE   = '@STD_DATE@'
  ) V ON S.STD_DATE=V.STD_DATE
AND S.STOCK_ID     =V.STOCK_ID
LEFT OUTER JOIN OTC_TD_MRELSSPOT P
ON S.STD_DATE =P.STD_DATE
AND A.ELS_CODE=P.ELS_CODE
LEFT OUTER JOIN
  (SELECT A.ELS_CODE ,
    C.BOND_CLASS_ID ,
    CASE
      WHEN DATE_MONTH_DIFF_RATE > 1/365
      AND DATE_MONTH_DIFF_RATE <= 0.25
      THEN C.D001+((DATE_MONTH_DIFF_RATE-1/365)/(0.25-1/365)*(C.M003-C.D001))
      WHEN DATE_MONTH_DIFF_RATE > 0.25
      AND DATE_MONTH_DIFF_RATE <= 0.5
      THEN C.M003+((DATE_MONTH_DIFF_RATE-0.25)/(0.5-0.25)*(C.M006-C.M003))
      WHEN DATE_MONTH_DIFF_RATE > 0.5
      AND DATE_MONTH_DIFF_RATE <= 0.75
      THEN C.M006+((DATE_MONTH_DIFF_RATE-0.5)/(0.75-0.5)*(C.M009-C.M006))
      WHEN DATE_MONTH_DIFF_RATE > 0.75
      AND DATE_MONTH_DIFF_RATE <= 1
      THEN C.M009+((DATE_MONTH_DIFF_RATE-0.75)/(1-0.75)*(C.M012-C.M009))
      WHEN DATE_MONTH_DIFF_RATE > 1
      AND DATE_MONTH_DIFF_RATE <= 1.5
      THEN C.M012+((DATE_MONTH_DIFF_RATE-1)/(1.5-1)*(C.M018-C.M012))
      WHEN DATE_MONTH_DIFF_RATE > 1.5
      AND DATE_MONTH_DIFF_RATE <= 2
      THEN C.M018+((DATE_MONTH_DIFF_RATE-1.5)/(2-1.5)*(C.M024-C.M018))
      WHEN DATE_MONTH_DIFF_RATE > 2
      AND DATE_MONTH_DIFF_RATE <= 2.5
      THEN C.M024+((DATE_MONTH_DIFF_RATE-2)/(2.5-2)*(C.M030-C.M024))
      WHEN DATE_MONTH_DIFF_RATE > 2.5
      AND DATE_MONTH_DIFF_RATE <= 3
      THEN C.M030+((DATE_MONTH_DIFF_RATE-2.5)/(3-2.5)*(C.M036-C.M030))
      WHEN DATE_MONTH_DIFF_RATE > 3
      AND DATE_MONTH_DIFF_RATE <= 4
      THEN C.M036+((DATE_MONTH_DIFF_RATE-3)/(4-3)*(C.M048-C.M036))
      WHEN DATE_MONTH_DIFF_RATE > 4
      AND DATE_MONTH_DIFF_RATE <= 5
      THEN C.M048+((DATE_MONTH_DIFF_RATE-4)/(5-4)*(C.M060-C.M048))
      WHEN DATE_MONTH_DIFF_RATE > 5
      AND DATE_MONTH_DIFF_RATE <= 7
      THEN C.M060+((DATE_MONTH_DIFF_RATE-5)/(7-5)*(C.M084-C.M060))
      WHEN DATE_MONTH_DIFF_RATE > 7
      AND DATE_MONTH_DIFF_RATE <= 10
      THEN C.M084+((DATE_MONTH_DIFF_RATE-7)/(10-7)*(C.M120-C.M084))
      WHEN DATE_MONTH_DIFF_RATE > 10
      AND DATE_MONTH_DIFF_RATE <= 15
      THEN C.M120+((DATE_MONTH_DIFF_RATE-10)/(15-10)*(C.M180-C.M120))
      WHEN DATE_MONTH_DIFF_RATE > 15
      AND DATE_MONTH_DIFF_RATE <= 20
      THEN C.M180+((DATE_MONTH_DIFF_RATE-15)/(20-15)*(C.M240-C.M180))
    END RF
  FROM TD_MRCURVE C
  INNER JOIN OTC_TC_MRMONTHDIFF A
  ON 1                 =1
  WHERE C.CURVE_CODE   ='S' -- 고정
  AND C.BOND_CLASS_ID IN
    (SELECT
      CASE
        WHEN FX_CODE = '0'
        THEN '111001'
        WHEN FX_CODE = '1'
        THEN 'USDSPT'
        WHEN FX_CODE = '2'
        THEN 'JPYSPT'
        WHEN FX_CODE = '3'
        THEN 'EURSPT'
      END BOND_CLASS_ID
    FROM OTC_TC_MRELSSTOCKPRICE
    WHERE ELS_CODE='@ITEM_CODE@'
    GROUP BY FX_CODE
    )
  AND C.STD_DATE   ='@STD_DATE@'
  )D ON D.ELS_CODE =A.ELS_CODE
AND D.BOND_CLASS_ID=
  CASE
    WHEN A.FX_CODE = '0'
    THEN '111001'
    WHEN A.FX_CODE = '1'
    THEN 'USDSPT'
    WHEN A.FX_CODE = '2'
    THEN 'JPYSPT'
    WHEN A.FX_CODE = '3'
    THEN 'EURSPT'
  END
WHERE A.ELS_CODE='@ITEM_CODE@'
